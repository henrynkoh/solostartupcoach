[{"severity":"convention","location":{"begin_pos":228,"end_pos":232},"message":"Layout/TrailingWhitespace: Trailing whitespace detected.","cop_name":"Layout/TrailingWhitespace","status":"uncorrected"},{"severity":"convention","location":{"begin_pos":596,"end_pos":627},"message":"Style/SafeNavigation: Use safe navigation (`&.`) instead of checking if an object exists before calling the method.","cop_name":"Style/SafeNavigation","status":"uncorrected"},{"severity":"warning","location":{"begin_pos":876,"end_pos":881},"message":"Lint/UnusedMethodArgument: Unused method argument - `token`. If it's necessary, use `_` or `_token` as an argument name to indicate that it won't be used. If it's unnecessary, remove it. You can also write as `valid_token?(*)` if you want the method to accept any arguments but don't care about them.","cop_name":"Lint/UnusedMethodArgument","status":"uncorrected"},{"severity":"convention","location":{"begin_pos":1165,"end_pos":1169},"message":"Layout/TrailingWhitespace: Trailing whitespace detected.","cop_name":"Layout/TrailingWhitespace","status":"uncorrected"},{"severity":"convention","location":{"begin_pos":1174,"end_pos":1176},"message":"Style/GuardClause: Use a guard clause (`return unless count > max_requests_per_minute`) instead of wrapping the code inside a conditional expression.","cop_name":"Style/GuardClause","status":"uncorrected"},{"severity":"convention","location":{"begin_pos":1229,"end_pos":1230},"message":"Layout/TrailingWhitespace: Trailing whitespace detected.","cop_name":"Layout/TrailingWhitespace","status":"uncorrected"},{"severity":"warning","location":{"begin_pos":1296,"end_pos":1314},"message":"Lint/AmbiguousOperatorPrecedence: Wrap expressions with varying precedence with parentheses to avoid ambiguity.","cop_name":"Lint/AmbiguousOperatorPrecedence","status":"uncorrected"},{"severity":"convention","location":{"begin_pos":1472,"end_pos":1474},"message":"Style/GuardClause: Use a guard clause (`return unless request.post? || request.put? || request.patch?`) instead of wrapping the code inside a conditional expression.","cop_name":"Style/GuardClause","status":"uncorrected"},{"severity":"convention","location":{"begin_pos":1529,"end_pos":1535},"message":"Style/GuardClause: Use a guard clause (`return if request.content_type == 'application/json'`) instead of wrapping the code inside a conditional expression.","cop_name":"Style/GuardClause","status":"uncorrected"},{"severity":"convention","location":{"begin_pos":1529,"end_pos":1535},"message":"Style/SoleNestedConditional: Consider merging nested conditions into outer `if` conditions.","cop_name":"Style/SoleNestedConditional","status":"uncorrected"},{"severity":"convention","location":{"begin_pos":1651,"end_pos":1652},"message":"Layout/TrailingWhitespace: Trailing whitespace detected.","cop_name":"Layout/TrailingWhitespace","status":"uncorrected"},{"severity":"convention","location":{"begin_pos":2437,"end_pos":2438},"message":"Layout/TrailingWhitespace: Trailing whitespace detected.","cop_name":"Layout/TrailingWhitespace","status":"uncorrected"},{"severity":"warning","location":{"begin_pos":2582,"end_pos":2587},"message":"Lint/UnusedMethodArgument: Unused method argument - `error`. If it's necessary, use `_` or `_error` as an argument name to indicate that it won't be used. If it's unnecessary, remove it. You can also write as `handle_not_found(*)` if you want the method to accept any arguments but don't care about them.","cop_name":"Lint/UnusedMethodArgument","status":"uncorrected"},{"severity":"convention","location":{"begin_pos":2721,"end_pos":2722},"message":"Layout/TrailingWhitespace: Trailing whitespace detected.","cop_name":"Layout/TrailingWhitespace","status":"uncorrected"},{"severity":"convention","location":{"begin_pos":2939,"end_pos":2940},"message":"Layout/TrailingWhitespace: Trailing whitespace detected.","cop_name":"Layout/TrailingWhitespace","status":"uncorrected"},{"severity":"convention","location":{"begin_pos":2940,"end_pos":2940},"message":"Layout/TrailingEmptyLines: Final newline missing.","cop_name":"Layout/TrailingEmptyLines","status":"uncorrected"}]